import random
import sys  # para poder usar sys.exit()

puntaje = 0

# Preguntas, respuestas y sus correctas
questions = [
    "¬øQu√© funci√≥n se usa para obtener la longitud de una cadena en Python?",
    "¬øCu√°l de las siguientes opciones es un n√∫mero entero en Python?",
    "¬øC√≥mo se solicita entrada del usuario en Python?",
    "¬øCu√°l de las siguientes expresiones es un comentario v√°lido en Python?",
    "¬øCu√°l es el operador de comparaci√≥n para verificar si dos valores son iguales?",
]

answers = [
    ("size()", "len()", "length()", "count()"),
    ("3.14", "'42'", "10", "True"),
    ("input()", "scan()", "read()", "ask()"),
    (
        "// Esto es un comentario",
        "/* Esto es un comentario */",
        "-- Esto es un comentario",
        "# Esto es un comentario",
    ),
    ("=", "==", "!=", "==="),
]

correct_answers_index = [1, 2, 0, 3, 1]

# Unimos las 3 listas en una sola y elegimos 3 preguntas al azar
questions_to_ask = random.choices(list(zip(questions, answers, correct_answers_index)), k=3)

# El usuario deber√° contestar 3 preguntas
for question, options, correct_index in questions_to_ask:
    # Se muestra la pregunta y las respuestas posibles
    print(question)
    for i, option in enumerate(options):
        print(f"{i + 1}. {option}")

    # El usuario tiene 2 intentos para responder correctamente
    for intento in range(2):
        try:
            user_answer = int(input("Respuesta: ")) - 1
            # Verificamos si el n√∫mero est√° dentro del rango
            if user_answer < 0 or user_answer >= len(options):
                print("Respuesta no v√°lida")
                sys.exit(1)
        except ValueError:
            print("Respuesta no v√°lida")
            sys.exit(1)

        # Se verifica si la respuesta es correcta
        if user_answer == correct_index:
            puntaje += 1
            print("¬°Correcto!")
            break
        else:
            if intento == 1:  # Si se acabaron los intentos
                print("Incorrecto. La respuesta correcta es:")
                print(options[correct_index])
            else:
                puntaje -= 0.5
                print("Incorrecto, intenta nuevamente.")

    print()  # Salto de l√≠nea despu√©s de cada pregunta

print("FINAL DEL JUEGO. PUNTAJE:", puntaje)


#Cambios importantes:
#Usamos zip(questions, answers, correct_answers_index) para agrupar todo en una sola lista de tuplas.
#Cada tupla es de la forma (pregunta, opciones, indice_correcto).
#random.choices(..., k=3) selecciona 3 preguntas al azar.
#Ya no accedemos por √≠ndices (questions[i], answers[i], etc.), sino que directamente usamos las variables question, options y correct_index.

#1. zip(questions, answers, correct_answers_index)
#üîó Une las tres listas en una sola secuencia de tuplas.
#Cada tupla es de la forma:
#  ("pregunta", ("opciones..."), indice_correcto)

#2. list(...)
#Convierte ese objeto zip en una lista ‚Äúreal‚Äù que Python puede manejar m√°s f√°cilmente.

#3. random.choices(..., k=3)
#Elige 3 elementos al azar de esa lista.
#El resultado es otra lista, pero solo con 3 tuplas seleccionadas.

#ntonces, questions_to_ask termina siendo una lista de 3 preguntas con sus opciones y la respuesta correcta,
#  que despu√©s vos vas recorriendo con:
#for question, options, correct_index in questions_to_ask:
#‚ö†Ô∏è Detalle: random.choices puede repetir preguntas.
#Si quer√©s que no repita, hay que usar random.sample en lugar de choices.

#üîπ random.choices(population, k=N)
#Sirve para elegir varios elementos (con repetici√≥n permitida).
#Par√°metros:
# population: la lista/tupla/etc. de donde se eligen los elementos.
# k: cu√°ntos elementos queremos.